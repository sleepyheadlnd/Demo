 
  ----jGRASP exec: python A6_P6_ForwardChaining.py
 
 LASTNAME_FIRSTNAME
 CS-335, Spring 2023
 A6_P6_Forward_Chaining
 
 Entails using Forward Chaining:
 
 =================================================
 Test #1
 
 The knowledge base: 
 
 ['~A', 'B']
 ['A']
 
 The query: B
 
 
 inferred = ['A', 'B']
 clause 0:  count = 0
 clause 1:  count = 0
 The knowledge base does NOT entail query B.
 
 =================================================
 Test #2
 
 The knowledge base: 
 
 ['~A', 'B']
 ['B']
 
 The query: A
 
 
 inferred = ['B']
 clause 0:  count = 1
 clause 1:  count = 0
 The knowledge base does NOT entail query A.
 
 =================================================
 Test #3
 
 The knowledge base: 
 
 ['~C', '~B', 'A']
 ['~D', '~B', 'C']
 ['~E', 'D']
 ['~D', 'B']
 ['E']
 
 The query: A
 
 
 inferred = ['E', 'D', 'B', 'C', 'A']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 0
 clause 4:  count = 0
 The knowledge base does NOT entail query A.
 
 =================================================
 Test #4
 
 The knowledge base: 
 
 ['~P', 'Q']
 ['~L', '~M', 'P']
 ['~B', '~L', 'M']
 ['~A', '~P', 'L']
 ['~A', '~B', 'L']
 ['A']
 ['B']
 
 The query: Q
 
 
 inferred = ['A', 'B', 'L', 'M', 'P', 'Q']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 1
 clause 4:  count = 0
 clause 5:  count = 0
 clause 6:  count = 0
 The knowledge base does NOT entail query Q.
 
 =================================================
 Test #5
 
 The knowledge base: 
 
 ['~P', 'Q']
 ['~L', '~M', 'P']
 ['~B', '~L', 'M']
 ['~A', '~P', 'L']
 ['~A', '~B', 'L']
 ['~N', 'X']
 ['~R', '~S', 'X']
 ['~S', '~Q', 'S']
 ['A']
 ['B']
 
 The query: P
 
 
 inferred = ['A', 'B', 'L', 'M', 'P', 'Q']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 1
 clause 4:  count = 0
 clause 5:  count = 1
 clause 6:  count = 2
 clause 7:  count = 1
 clause 8:  count = 0
 clause 9:  count = 0
 The knowledge base does NOT entail query P.
 
 =================================================
 Test #6
 
 The knowledge base: 
 
 ['~P', 'Q']
 ['~L', '~M', 'P']
 ['~B', '~L', 'M']
 ['~A', '~P', 'L']
 ['~A', '~B', 'L']
 ['~N', 'X']
 ['~R', '~S', 'X']
 ['~S', '~Q', 'S']
 ['A']
 ['B']
 
 The query: S
 
 
 inferred = ['A', 'B', 'L', 'M', 'P', 'Q']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 1
 clause 4:  count = 0
 clause 5:  count = 1
 clause 6:  count = 2
 clause 7:  count = 1
 clause 8:  count = 0
 clause 9:  count = 0
 The knowledge base does NOT entail query S.
 
 =================================================
 Test #7
 
 The knowledge base: 
 
 ['~P', 'Q']
 ['~L', '~M', 'P']
 ['~B', '~L', 'M']
 ['~A', '~P', 'L']
 ['~A', '~B', 'L']
 ['~N', 'X']
 ['~R', '~S', 'X']
 ['~S', '~Q', 'S']
 ['A']
 ['B']
 
 The query: X
 
 
 inferred = ['A', 'B', 'L', 'M', 'P', 'Q']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 1
 clause 4:  count = 0
 clause 5:  count = 1
 clause 6:  count = 2
 clause 7:  count = 1
 clause 8:  count = 0
 clause 9:  count = 0
 The knowledge base does NOT entail query X.
 
 =================================================
 Test #8
 
 The knowledge base: 
 
 ['~A', '~B', 'C']
 ['~B', '~D', 'E']
 ['~A', 'F']
 ['~L', '~M', '~F', 'H']
 ['~F', '~D', 'B']
 ['~F', '~H', 'B']
 ['~C', '~B', '~F', 'G']
 ['~G', '~E', 'J']
 ['~L', '~F', 'M']
 ['~M', '~L', 'H']
 ['~M', 'L']
 ['A']
 ['D']
 
 The query: H
 
 
 inferred = ['A', 'D', 'F', 'B', 'C', 'E', 'G', 'J']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 2
 clause 4:  count = 0
 clause 5:  count = 1
 clause 6:  count = 0
 clause 7:  count = 0
 clause 8:  count = 1
 clause 9:  count = 2
 clause 10:  count = 1
 clause 11:  count = 0
 clause 12:  count = 0
 The knowledge base does NOT entail query H.
 
 =================================================
 Test #9
 
 The knowledge base: 
 
 ['~A', '~B', 'C']
 ['~B', '~D', 'E']
 ['~A', 'F']
 ['~L', '~M', '~F', 'H']
 ['~F', '~D', 'B']
 ['~F', '~H', 'B']
 ['~C', '~B', '~F', 'G']
 ['~G', '~E', 'J']
 ['~L', '~F', 'M']
 ['~M', '~L', 'H']
 ['~M', 'L']
 ['A']
 ['D']
 
 The query: G
 
 
 inferred = ['A', 'D', 'F', 'B', 'C', 'E', 'G', 'J']
 clause 0:  count = 0
 clause 1:  count = 0
 clause 2:  count = 0
 clause 3:  count = 2
 clause 4:  count = 0
 clause 5:  count = 1
 clause 6:  count = 0
 clause 7:  count = 0
 clause 8:  count = 1
 clause 9:  count = 2
 clause 10:  count = 1
 clause 11:  count = 0
 clause 12:  count = 0
 The knowledge base does NOT entail query G.
 
 =================================================
 Test #10
 
 The knowledge base: 
 
 ['~L', '~F', 'B']
 ['~Y', '~E', 'Z']
 ['~W', 'T']
 ['~B', '~X', 'W']
 ['~F', '~B', 'X']
 ['~N', 'Z']
 ['~Z', '~Y', 'E']
 ['~L', '~P', '~E', 'B']
 ['~Z', '~T', 'E']
 ['L']
 ['F']
 
 The query: W
 
 
 inferred = ['L', 'F', 'B', 'X', 'W', 'T']
 clause 0:  count = 0
 clause 1:  count = 2
 clause 2:  count = 0
 clause 3:  count = 0
 clause 4:  count = 0
 clause 5:  count = 1
 clause 6:  count = 2
 clause 7:  count = 2
 clause 8:  count = 1
 clause 9:  count = 0
 clause 10:  count = 0
 The knowledge base does NOT entail query W.
 
  ----jGRASP: operation complete.
 