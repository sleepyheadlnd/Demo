C:\Users\shado\AppData\Local\Programs\Python\Python311\python.exe "D:\Homework\Asst 5, cs-335-s23\A5_P1_CSP_DANG_DUC.py" 

=============================================
DANG_DUC
TESTING:  getDegrees(g)

i = 0, n = 3:
[1, 2, 1]

i = 1, n = 6:
[2, 3, 3, 3, 2, 5]

i = 2, n = 8:
[3, 3, 3, 3, 3, 3, 3, 3]

i = 3, n = 11:
[4, 3, 4, 4, 3, 3, 4, 4, 2, 3, 4]

i = 4, n = 11:
[4, 3, 4, 4, 3, 3, 5, 4, 3, 3, 4]

i = 5, n = 30:
[9, 9, 13, 11, 11, 5, 8, 13, 5, 3, 10, 13, 6, 3, 9, 8, 7, 9, 9, 8, 6, 10, 14, 9, 12, 6, 10, 10, 11, 9]

i = 6, n = 30:
[7, 4, 4, 5, 6, 5, 5, 5, 5, 5, 8, 5, 5, 3, 4, 5, 4, 3, 3, 5, 4, 3, 2, 2, 5, 3, 4, 3, 3, 5]

i = 7, n = 30:
[11, 6, 12, 9, 8, 5, 11, 10, 7, 12, 8, 8, 10, 6, 13, 11, 8, 17, 10, 7, 13, 8, 10, 4, 8, 8, 14, 15, 9, 8]

i = 8, n = 50:
[15, 13, 18, 12, 22, 19, 18, 10, 11, 16, 14, 13, 19, 13, 14, 8, 10, 15, 16, 18, 15, 11, 14, 12, 17, 17, 16, 11, 13, 12, 18, 10, 13, 9, 17, 11, 16, 14, 10, 13, 12, 15, 21, 15, 16, 13, 17, 15, 16, 11]

i = 9, n = 60:
[17, 16, 19, 16, 21, 15, 18, 16, 20, 20, 28, 24, 22, 26, 24, 14, 14, 16, 14, 20, 15, 19, 14, 10, 24, 15, 18, 16, 19, 15, 14, 11, 17, 19, 21, 15, 14, 24, 21, 13, 24, 17, 16, 19, 21, 22, 16, 24, 19, 18, 18, 19, 21, 16, 17, 23, 14, 14, 20, 14]

i = 10, n = 70:
[28, 18, 35, 25, 20, 28, 23, 16, 22, 21, 26, 26, 26, 27, 20, 28, 29, 21, 22, 29, 23, 24, 21, 22, 20, 24, 31, 27, 19, 29, 30, 21, 25, 32, 18, 24, 17, 25, 27, 24, 32, 30, 22, 38, 28, 24, 22, 32, 22, 27, 27, 30, 21, 28, 25, 23, 19, 26, 32, 21, 36, 21, 22, 20, 24, 31, 26, 17, 24, 23]


=============================================
DANG_DUC
TESTING:  getNextVariable(g, domains, degrees)

Next Variable:  1
Next Variable:  -1
Next Variable:  3
Next Variable:  7
Next Variable:  5
Next Variable:  22


=============================================
DANG_DUC
TESTING:  AC3(g, domains, v)

initial size = 5
domains:  [[1, 2], [1], [1, 2]]
AC3 Result:  [[2], [1], [2]]
result size = 3

initial size = 11
domains:  [[1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1]]
AC3 Result:  []
result size = 0

initial size = 16
domains:  [[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1]]
AC3 Result:  [[2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [1]]
result size = 11

initial size = 19
domains:  [[1], [2, 3], [2], [2], [2, 3], [1, 3], [1, 2, 3], [1], [2, 3], [1, 3], [2, 3]]
AC3 Result:  [[1], [2], [2], [2], [2], [1], [3], [1], [3], [1], [3]]
result size = 11

initial size = 60
domains:  [[2], [1, 3], [1, 2, 3], [3], [1, 2], [1, 2, 3], [2, 3], [1, 2], [2], [1, 2], [1], [3], [2], [1, 3], [2, 3], [1, 3], [1, 2, 3], [2, 3], [2], [1, 2, 3], [1, 2], [1, 2, 3], [1, 2, 3], [1, 2, 3], [2, 3], [2, 3], [1, 3], [1], [1, 2, 3], [1, 3]]
AC3 Result:  [[2], [3], [2], [3], [1], [2, 3], [3], [1, 2], [2], [1], [1], [3], [2], [1, 3], [2, 3], [3], [1, 3], [2, 3], [2], [1], [1, 2], [1, 2, 3], [2, 3], [1, 2], [2], [2], [3], [1], [1, 3], [3]]
result size = 42

initial size = 273
domains:  [[1, 3, 5, 6], [1, 2, 3, 5], [1, 3, 5], [2, 3, 5, 6], [2, 3, 5], [1, 2, 3, 5, 6], [3, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [2, 3, 4, 5], [2, 3, 4, 5, 6], [1, 3, 4, 5], [2, 3, 4, 5, 6], [1, 2, 3, 4, 5], [1, 3, 5], [1, 2, 3, 4, 5], [1, 2, 3, 5], [1, 3, 4, 5], [1, 3, 4, 5, 6], [3, 4, 5], [1, 2, 3, 5], [3, 4, 5, 6], [3, 4, 5], [3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [3], [1, 3, 5], [2, 3, 4, 5, 6], [1, 3, 4, 5], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [3, 5], [2, 3, 5, 6], [1, 2, 3, 4, 5, 6], [3, 5], [1, 3, 5], [2, 3, 4, 5], [2, 3, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 5, 6], [2, 3, 5, 6], [3, 5], [1], [3, 5], [2, 3, 4, 5, 6], [2, 3, 5, 6], [4], [1, 2, 3, 4, 5], [3, 5, 6], [2, 3, 4, 5], [3, 5], [1, 2, 3, 5], [2, 3, 5, 6], [3, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [2, 3, 5, 6], [2], [1, 3, 4, 5, 6], [6], [3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [3, 4, 5, 6], [3, 5], [3, 5], [2, 3, 4, 5], [2, 3, 4, 5, 6], [2, 3, 4, 5, 6]]
AC3 Result:  []
result size = 0


=============================================
DANG_DUC
TESTING:  backtrackingSearch(g, m)


Test 0, n = 3:

m = 2
Graph[0] requires 2 colors:

[[2], [1], [2]]
-----------------------------------

Test 1, n = 6:

m = 2
m = 3
Graph[1] requires 3 colors:

[[3], [2], [3], [2], [3], [1]]
-----------------------------------

Test 2, n = 8:

m = 2
Graph[2] requires 2 colors:

[[1], [2], [1], [2], [1], [2], [1], [2]]
-----------------------------------

Test 3, n = 11:

m = 2
m = 3
Graph[3] requires 3 colors:

[[1], [2], [2], [2], [2], [1], [3], [1], [3], [1], [3]]
-----------------------------------

Test 4, n = 11:

m = 2
m = 3
m = 4
Graph[4] requires 4 colors:

[[3], [2], [2], [3], [2], [3], [1], [1], [2], [4], [1]]
-----------------------------------

Test 5, n = 30:

m = 2
m = 3
m = 4
m = 5
Graph[5] requires 5 colors:

[[3], [5], [5], [4], [4], [3], [5], [1], [2], [1], [4], [2], [5], [2], [2], [2], [2], [3], [5], [4], [1], [3], [1], [1], [3], [4], [1], [4], [2], [1]]
-----------------------------------

Test 6, n = 30:

m = 2
m = 3
Graph[6] requires 3 colors:

[[2], [3], [2], [3], [1], [2], [3], [1], [2], [1], [1], [3], [2], [1], [3], [3], [3], [2], [2], [1], [1], [3], [3], [2], [2], [2], [3], [1], [1], [3]]
-----------------------------------

Test 7, n = 30:

m = 2
m = 3
m = 4
m = 5
m = 6
Graph[7] requires 6 colors:

[[4], [2], [1], [5], [4], [3], [2], [5], [4], [1], [6], [2], [3], [1], [3], [5], [5], [1], [4], [1], [3], [2], [4], [3], [5], [4], [2], [2], [4], [1]]
-----------------------------------

Test 8, n = 50:

m = 2
m = 3
m = 4
m = 5
m = 6
Graph[8] requires 6 colors:

[[3], [2], [4], [4], [1], [2], [5], [2], [6], [6], [5], [5], [3], [5], [3], [3], [5], [5], [2], [4], [3], [6], [1], [3], [2], [3], [4], [3], [5], [1], [1], [2], [1], [3], [4], [2], [4], [3], [1], [2], [6], [4], [6], [6], [1], [5], [5], [2], [6], [1]]
-----------------------------------

Test 9, n = 60:

m = 2
m = 3
m = 4
m = 5
m = 6
m = 7
Graph[9] requires 7 colors:

[[6], [6], [7], [4], [5], [6], [6], [5], [1], [6], [1], [3], [2], [2], [1], [6], [5], [4], [6], [3], [2], [3], [5], [7], [4], [2], [5], [6], [4], [4], [2], [5], [3], [7], [7], [7], [5], [4], [5], [4], [2], [3], [2], [7], [5], [6], [1], [1], [6], [3], [4], [1], [3], [2], [7], [4], [4], [7], [3], [2]]
-----------------------------------

Test 10, n = 70:

m = 2
m = 3
m = 4
m = 5
m = 6
m = 7
m = 8
m = 9
Graph[10] requires 9 colors:

[[6], [1], [7], [2], [8], [9], [8], [3], [1], [7], [3], [6], [3], [5], [8], [4], [5], [6], [5], [6], [6], [5], [6], [3], [3], [3], [5], [9], [7], [1], [8], [2], [9], [2], [9], [7], [5], [5], [4], [2], [1], [4], [8], [1], [7], [5], [4], [3], [1], [9], [7], [6], [1], [2], [3], [1], [3], [7], [4], [3], [2], [9], [2], [2], [8], [6], [7], [4], [3], [4]]
-----------------------------------

Process finished with exit code 0
